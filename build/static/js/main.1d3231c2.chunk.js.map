{"version":3,"sources":["components/Navigation/Navigation.js","store/actions/scannedItems.js","components/Spinner/Spinner.js","components/Scanner/Scanner.js","components/Product/Product.js","containers/Scan/Scan.js","assets/config.js","containers/History/History.js","App.js","store/reducers/scannedItems.js","store/configStore.js","serviceWorker.js","index.js"],"names":["Navigation","react_default","a","createElement","react","className","react_router_dom","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Component","spinnerOn","productDetected","product","payload","invalidBarcode","err","Spinner_Spinner","Scanner","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","nocamera","onDetect","bind","assertThisInitialized","Quagga","init","inputStream","name","constraints","width","height","numberOfWorkers","navigator","hardwareConcurrency","target","document","querySelector","locate","decoder","readers","start","onDetected","res","stop","offProcessed","onBarcodeDetect","codeResult","code","Product","onClick","click","view","item","barcode_number","barcode_type","product_name","src","product_image","manufacturer","brand","category","description","Scan","_onBarcodeDetect","barcode","process","componentRendered","startScanning","invalid","noApi","href","scan","components_Scanner_Scanner","noCamera","console","log","spinner","productScanned","components_Product_Product","connect","ownProps","scanned","dispatch","req","Request","headers","Access-Control-Allow-Origin","mode","fetch","catch","then","status","resStatus","json","parsedRes","products","images","processBarcode","History","clickHandler","clearScanned","_this2","scannedItems","length","scope","map","scannedItem","i","key","setItem","deleteItem","selectedItem","App","routes","react_router","exact","path","component","components_Navigation_Navigation","initialState","arguments","undefined","action","objectSpread","concat","toConsumableArray","selected","filter","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Boolean","location","hostname","match","ReactDOM","render","es","src_App_0","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"4YA+BeA,0LAxBX,OACEC,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,2BACbJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMD,UAAU,wBAAwBE,GAAG,KAA3C,aACAN,EAAAC,EAAAC,cAAA,UAAQE,UAAU,yBAAyBG,KAAK,SAASC,cAAY,WAAaC,cAAY,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,qBAC9LZ,EAAAC,EAAAC,cAAA,QAAME,UAAU,iCAEpBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,2BAA2BS,GAAG,0BAC3Cb,EAAAC,EAAAC,cAAA,MAAIE,UAAU,uBACdJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,4BACbJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEC,GAAG,YACHN,EAAAC,EAAAC,cAAA,UAAQE,UAAU,+CAAlB,wBAhBSU,8BCuEZC,EAAY,WACvB,MAAO,CACLR,KAAM,eAKGS,EAAkB,SAACC,GAC9B,MAAO,CACLV,KAAM,mBACNW,QAASD,IAIAE,EAAiB,SAACC,GAE7B,MAAO,CACLb,KAFoB,UAARa,EAAkB,aAAe,oBCtFlCC,SAAA,WACb,OACErB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBAEfJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAcJ,EAAAC,EAAAC,cAAA,YAAWF,EAAAC,EAAAC,cAAA,YAAWF,EAAAC,EAAAC,cAAA,YAAWF,EAAAC,EAAAC,cAAA,YAAWF,EAAAC,EAAAC,cAAA,YAAWF,EAAAC,EAAAC,cAAA,YAAWF,EAAAC,EAAAC,cAAA,YAAWF,EAAAC,EAAAC,cAAA,YAAWF,EAAAC,EAAAC,cAAA,YAAWF,EAAAC,EAAAC,cAAA,YAAWF,EAAAC,EAAAC,cAAA,YAAWF,EAAAC,EAAAC,cAAA,iCCiD3IoB,qBAnDb,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAChBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAO,CACVC,UAAU,GAEZR,EAAKS,SAAWT,EAAKS,SAASC,KAAdT,OAAAU,EAAA,EAAAV,CAAAD,IALAA,mFAUhBY,IAAOC,KAAK,CACVC,YAAa,CACXC,KAAM,OACNhC,KAAM,aACNiC,YAAa,CACXC,MAAO,MACPC,OAAQ,OAEVC,gBAAiBC,UAAUC,oBAC3BC,OAAQC,SAASC,cAAc,iBAEjCC,QAAQ,EACRC,QAAS,CACPC,QAAS,CAAC,kBAAmB,aAAc,kBAE5C,SAAU/B,GACPA,GAGJgB,IAAOgB,UAEThB,IAAOiB,WAAW1B,KAAKM,2CAIhBqB,GAEPlB,IAAOmB,OACPnB,IAAOoB,eACP7B,KAAKJ,MAAMkC,gBAAgBH,EAAII,WAAWC,uCAI1C,OACE3D,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACMH,EAAAC,EAAAC,cAAA,OAAKW,GAAG,wBA/CEC,cCgDP8C,0LAhDX,OACE5D,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACEH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UACE2D,QAASlC,KAAKJ,MAAMuC,MAAQnC,KAAKJ,MAAMuC,MAAQnC,KAAKJ,MAAMwC,KAC1D3D,UAAU,qDAAqDuB,KAAKJ,MAAMuC,MAAQ,aAAe,gBACnG9D,EAAAC,EAAAC,cAAA,SAAOE,UAAU,uBACfJ,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,UAAKyB,KAAKJ,MAAMyC,KAAKC,iBAEvBjE,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,UAAKyB,KAAKJ,MAAMyC,KAAKE,eAEvBlE,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,UAAKyB,KAAKJ,MAAMyC,KAAKG,eAEvBnE,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,OAAKkE,IAAKzC,KAAKJ,MAAMyC,KAAKK,kBAEhCrE,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,UAAKyB,KAAKJ,MAAMyC,KAAKM,eAEvBtE,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,UAAKyB,KAAKJ,MAAMyC,KAAKO,QAEvBvE,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,UAAKyB,KAAKJ,MAAMyC,KAAKQ,WAEvBxE,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,UAAKyB,KAAKJ,MAAMyC,KAAKS,yBAxCb3D,cCOhB4D,qBAEJ,SAAAA,EAAYnD,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+C,IAChBlD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiD,GAAA5C,KAAAH,KAAMJ,KACDoD,iBAAmBnD,EAAKmD,iBAAiBzC,KAAtBT,OAAAU,EAAA,EAAAV,CAAAD,IAFRA,gFAKDoD,GACfjD,KAAKJ,MAAMsD,QAAQD,oCAKnB,IAAIE,EACF9E,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,UACEK,KAAK,SACLsD,QAASlC,KAAKJ,MAAMwD,cACpB3E,UAAU,6CAA6C,oBA2D/D,OAvDGuB,KAAKJ,MAAMyD,QACZF,EACA9E,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAAA,+BAEFF,EAAAC,EAAAC,cAAA,UACEK,KAAK,SACLsD,QAASlC,KAAKJ,MAAMwD,cACpB3E,UAAU,6CACP,eAGDuB,KAAKJ,MAAM0D,QACnBH,EACA9E,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAAA,yBAAgBF,EAAAC,EAAAC,cAAA,KAAGgF,KAAK,oCAAoCpC,OAAO,UAAnD,WAAhB,sBAEF9C,EAAAC,EAAAC,cAAA,UACEK,KAAK,SACLsD,QAASlC,KAAKJ,MAAMwD,cACpB3E,UAAU,6CACP,gBAMRuB,KAAKJ,MAAM4D,OACZL,EAAoB9E,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAC/BJ,EAAAC,EAAAC,cAACkF,EAAD,CAAS3B,gBAAiB9B,KAAKgD,iBAC/BU,SAAU,kBAAIC,QAAQC,IAAI,4BAG7B5D,KAAKJ,MAAMiE,UACZV,EAAoB9E,EAAAC,EAAAC,cAACmB,EAAD,OAEU,MAA7BM,KAAKJ,MAAMkE,iBAEVX,EADCnD,KAAKJ,MAAM4D,KACQnF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAC/BJ,EAAAC,EAAAC,cAACkF,EAAD,CACE3B,gBAAiB9B,KAAKgD,oBAIR3E,EAAAC,EAAAC,cAACwF,EAAD,CACE1B,KAAMrC,KAAKJ,MAAMkE,eACjB3B,MAAOnC,KAAKJ,MAAMwD,iBAM1C/E,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACZ0E,WAjFQhE,cA0GJ6E,cAjBS,SAAC5D,EAAO6D,GAC9B,MAAO,CACLH,eAAgB1D,EAAM8D,QAAQJ,eAC9BD,QAASzD,EAAM8D,QAAQL,QACvBL,KAAMpD,EAAM8D,QAAQd,cACpBC,QAASjD,EAAM8D,QAAQ1E,eACvB8D,MAAOlD,EAAM8D,QAAQZ,QAIE,SAACa,EAAUF,GACpC,MAAO,CACLf,QAAS,SAACD,GAAckB,EJjFE,SAAClB,GAC7B,OAAO,SAAAkB,GACLA,EAAS/E,KAET,IAEIgF,EAAM,IAAIC,QKjCM,qDL+BCpB,EK9BI,kDLgCG,CAC1BqB,QAAS,CACPC,8BAA+B,yBAEjCC,KAAM,YAGJlF,EAAU,KACdmF,MAAML,GACLM,MAAM,SAAAjF,GAAG,OAAIkE,QAAQC,IAAI,QAASnE,KAClCkF,KAAK,SAAAhD,GAEJ,OADAgC,QAAQC,IAAIjC,EAAIiD,QACE,MAAfjD,EAAIiD,OACE,CACLC,UAAWlD,EAAIiD,QAEM,MAAfjD,EAAIiD,OACLjD,EAAImD,YADN,IAIRH,KAAK,SAAAI,GACuB,MAAxBA,EAAUF,UACa,IAAxBE,EAAUF,UAAkBV,EAAS3E,EAAe,UAAY2E,EAAS3E,EAAe,aAExFF,EAAU,CACRgD,eAAgByC,EAAUC,SAAS,GAAG1C,eACtCC,aAAcwC,EAAUC,SAAS,GAAGzC,aACpCC,aAAcuC,EAAUC,SAAS,GAAGxC,aACpCE,cAAeqC,EAAUC,SAAS,GAAGC,OAAO,GAC5CtC,aAAcoC,EAAUC,SAAS,GAAGrC,aACpCC,MAAOmC,EAAUC,SAAS,GAAGpC,MAC7BC,SAAUkC,EAAUC,SAAS,GAAGnC,SAChCC,YAAaiC,EAAUC,SAAS,GAAGlC,aAErCqB,EAAS9E,EAAgBC,QIyCI4F,CAAejC,KAChDG,cAAe,WAAOe,EJ3GjB,CACLvF,KAAM,sBI8GKoF,CAA6CjB,GE3GtDoC,oNAEJC,aAAe,WACbzB,QAAQC,IAAI,4FAKZ5D,KAAKJ,MAAMyF,gDAGJ,IAAAC,EAAAtF,KACHuF,EACElH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACbJ,EAAAC,EAAAC,cAAA,oDAoDR,OAhDAyB,KAAKJ,MAAM2F,aAAaC,QAAU,IACpCD,EACAlH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACPJ,EAAAC,EAAAC,cAAA,SAAOE,UAAU,uBACfJ,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIkH,MAAM,OAAV,OACApH,EAAAC,EAAAC,cAAA,MAAIkH,MAAM,OAAV,WACApH,EAAAC,EAAAC,cAAA,MAAIkH,MAAM,OAAV,gBACApH,EAAAC,EAAAC,cAAA,MAAIkH,MAAM,OAAV,gBACApH,EAAAC,EAAAC,cAAA,MAAIkH,MAAM,QACVpH,EAAAC,EAAAC,cAAA,MAAIkH,MAAM,UAGdpH,EAAAC,EAAAC,cAAA,aACGyB,KAAKJ,MAAM2F,aAAaG,IAAI,SAACC,EAAaC,GACzC,OACEvH,EAAAC,EAAAC,cAAA,MAAIsH,IAAKD,GACPvH,EAAAC,EAAAC,cAAA,MAAIkH,MAAM,OAAOG,EAAE,GACnBvH,EAAAC,EAAAC,cAAA,UAAKoH,EAAYrD,gBACjBjE,EAAAC,EAAAC,cAAA,UAAKoH,EAAYnD,cACjBnE,EAAAC,EAAAC,cAAA,UAAKoH,EAAYhD,cACjBtE,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UACEK,KAAK,SACLsD,QAAS,kBAAIoD,EAAK1F,MAAMkG,QAAQF,IAChCnH,UAAU,uBAHZ,cAIJJ,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UACE2D,QAAS,kBAAIoD,EAAK1F,MAAMmG,WAAWH,IACnChH,KAAK,SACLH,UAAU,yBAHZ,kBAanBuB,KAAKJ,MAAMoG,eACZT,EACAlH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACbJ,EAAAC,EAAAC,cAACwF,EAAD,CACE1B,KAAMrC,KAAKJ,MAAMoG,aACjB5D,KAAMpC,KAAKJ,MAAMyF,iBAKnBhH,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACG+G,UApEapG,cAyFP6E,cAfS,SAAC5D,EAAO6D,GAC9B,MAAO,CACLsB,aAAcnF,EAAM8D,QAAQqB,aAC5BS,aAAc5F,EAAM8D,QAAQJ,iBAIL,SAACK,EAAUF,GACpC,MAAO,CACLoB,aAAc,WAAQlB,ENjFjB,CACLvF,KAAM,mBMiFNkH,QAAS,SAACF,GAAQzB,EN7EC,SAACyB,GACtB,MAAO,CACLhH,KAAM,WACNW,QAASqG,GM0EkBE,CAAQF,KACnCG,WAAY,SAACH,GAAQzB,ENvEC,SAACyB,GACzB,MAAO,CACLhH,KAAM,cACNW,QAASqG,GMoEsBG,CAAWH,OAI/B5B,CAA6CmB,GC7D7Cc,0LArBX,IAAIC,EACF7H,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,KACE9H,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,WAAWC,UAAWnB,IACxC9G,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWvD,KAGrC,OACA1E,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACEL,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAEbJ,EAAAC,EAAAC,cAACgI,EAAD,MAECL,YAlBO/G,8CCTZqH,EAAe,CACnB3C,SAAS,EACTT,eAAe,EACfmC,aAAc,GACdzB,eAAgB,KAChBtE,gBAAgB,EAChB8D,OAAO,GAoEMiC,EAjEM,WAAkC,IAAjCnF,EAAiCqG,UAAAjB,OAAA,QAAAkB,IAAAD,UAAA,GAAAA,UAAA,GAAzBD,EAAcG,EAAWF,UAAAjB,OAAA,EAAAiB,UAAA,QAAAC,EAErD,OAAOC,EAAO/H,MACZ,IAAK,iBACH,OAAAkB,OAAA8G,EAAA,EAAA9G,CAAA,GACKM,EADL,CAEEgD,eAAe,EACfU,eAAgB,OAEpB,IAAK,aACH,OAAOhE,OAAA8G,EAAA,EAAA9G,CAAA,GACFM,EADL,CAEEgD,eAAe,EACfS,SAAS,IAEb,IAAK,mBACH,OAAO/D,OAAA8G,EAAA,EAAA9G,CAAA,GACFM,EADL,CAEE0D,eAAgB6C,EAAOpH,QACvBC,gBAAgB,EAChB8D,OAAO,EACPO,SAAS,EACTT,eAAe,EACfmC,aAAY,GAAAsB,OAAA/G,OAAAgH,EAAA,EAAAhH,CAAMM,EAAMmF,cAAZ,CAA0BoB,EAAOpH,YAEjD,IAAK,kBACH,OAAOO,OAAA8G,EAAA,EAAA9G,CAAA,GACFM,EADL,CAEE0D,eAAgB,KAChBD,SAAS,EACTrE,gBAAgB,EAChB8D,OAAO,IAEX,IAAK,aACH,OAAOxD,OAAA8G,EAAA,EAAA9G,CAAA,GACFM,EADL,CAEE0D,eAAgB,KAChBD,SAAS,EACTrE,gBAAgB,EAChB8D,OAAO,IAEX,IAAK,gBACH,OAAOxD,OAAA8G,EAAA,EAAA9G,CAAA,GACFM,EADL,CAEE0D,eAAgB,OAEpB,IAAK,WACH,IAAIiD,EAAW3G,EAAMmF,aAAayB,OAAO,SAAC3E,EAAMuD,GAC5C,OAAOA,IAAMe,EAAOpH,UAExB,OAAOO,OAAA8G,EAAA,EAAA9G,CAAA,GACFM,EADL,CAEE0D,eAAehE,OAAA8G,EAAA,EAAA9G,CAAA,GAAKiH,EAAS,MAE/B,IAAK,cACH,OAAOjH,OAAA8G,EAAA,EAAA9G,CAAA,GACFM,EADL,CAEEmF,aAAcnF,EAAMmF,aAAayB,OAAO,SAAC3E,EAAMuD,GAC7C,OAAOA,IAAMe,EAAOpH,YAG5B,QAAS,OAAOa,IClEd6G,EAAcC,YAAgB,CAClChD,QAASqB,IAGL4B,EAAmBC,OAAOC,sCAAwCC,IAIzDC,EAFDC,YAAYP,EAAaE,EAAiBM,YAAgBC,OCCpDC,QACW,cAA7BP,OAAOQ,SAASC,UAEe,UAA7BT,OAAOQ,SAASC,UAEhBT,OAAOQ,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP3J,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAAUV,MAAOA,GACflJ,EAAAC,EAAAC,cAAC2J,EAAD,OAEA9G,SAAS+G,eAAe,SDqHtB,kBAAmBlH,WACrBA,UAAUmH,cAAcC,MAAM1D,KAAK,SAAA2D,GACjCA,EAAaC","file":"static/js/main.1d3231c2.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport './Navigation.css'\r\n\r\nclass Navigation extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"mainNavbar\">\r\n          <nav className=\"navbar navbar-expand-lg\">\r\n            <Link className=\"navbar-brand navBrand\" to=\"/\">Scan Item</Link>\r\n            <button className=\"navbar-toggler favIcon\" type=\"button\" data-toggle=\"collapse\"   data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n              <span className=\"navbar-toggler-icon favIcon\"></span>\r\n            </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav mr-auto\"></ul>\r\n            <div className=\"form-inline my-2 my-lg-0\">\r\n              <Link\r\n                to=\"/history\">\r\n                <button className=\"btn btn-outline-primary btnNav navbar-brand\">History</button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          </nav>\r\n        </div>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Navigation\r\n\r\n","\r\nimport {APIKEY, URL_PATH, URL_EXTENSION} from '../../assets/config'\r\n\r\nexport const startScanning = () => {\r\n  return {\r\n    type: \"START_SCANNING\"\r\n  }\r\n}\r\n\r\nexport const clearScanned = () => {\r\n  return {\r\n    type: 'CLEAR_SCANNED'\r\n  }\r\n}\r\n\r\nexport const setItem = (i) => {\r\n  return {\r\n    type: 'SET_ITEM',\r\n    payload: i\r\n  }\r\n}\r\n\r\nexport const deleteItem = (i) => {\r\n  return {\r\n    type: 'DELETE_ITEM',\r\n    payload: i\r\n  }\r\n}\r\n\r\nexport const processBarcode = (barcode) => {\r\n  return dispatch => {\r\n    dispatch(spinnerOn())\r\n    \r\n    let url = URL_PATH + barcode + URL_EXTENSION + APIKEY\r\n    \r\n    let req = new Request(url , {\r\n      headers: {\r\n        'Access-Control-Allow-Origin': 'http://localhost:3000'\r\n      },\r\n      mode: 'no-cors'\r\n    })\r\n    \r\n    let product = null\r\n    fetch(req)\r\n    .catch(err => console.log('error', err))\r\n    .then(res => {\r\n      console.log(res.status)\r\n      if(res.status !== 200){\r\n        return {\r\n          resStatus: res.status\r\n        }\r\n      } else if(res.status === 200) {\r\n        return res.json()\r\n      }\r\n    })\r\n    .then(parsedRes => {\r\n      if(parsedRes.resStatus !== 200){\r\n        parsedRes.resStatus === 0 ? dispatch(invalidBarcode('noAPI')) : dispatch(invalidBarcode('invalid'))\r\n      } else {\r\n        product = {\r\n          barcode_number: parsedRes.products[0].barcode_number,\r\n          barcode_type: parsedRes.products[0].barcode_type,\r\n          product_name: parsedRes.products[0].product_name,\r\n          product_image: parsedRes.products[0].images[0],\r\n          manufacturer: parsedRes.products[0].manufacturer,\r\n          brand: parsedRes.products[0].brand,\r\n          category: parsedRes.products[0].category,\r\n          description: parsedRes.products[0].description,\r\n        }\r\n        dispatch(productDetected(product))\r\n      } \r\n    })\r\n  }\r\n  }\r\n\r\nexport const spinnerOn = () => {\r\n  return {\r\n    type: 'SPINNER_ON'\r\n  }\r\n}\r\n  \r\n  \r\nexport const productDetected = (product) => {\r\n  return {\r\n    type: 'PRODUCT_DETECTED',\r\n    payload: product\r\n  }\r\n}\r\n\r\nexport const invalidBarcode = (err) => {\r\n  let errText = err === 'noAPI' ? 'NO_API_KEY' : 'INVALID_BARCODE'\r\n  return {\r\n    type: errText,\r\n  }\r\n}","import React from 'react'\r\nimport './Spinner.css'\r\n\r\n\r\nexport default () => {\r\n  return (\r\n    <div className='spinnerContainer'>\r\n\r\n    <div className=\"lds-spinner\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component, Fragment } from 'react'\r\nimport Quagga from 'quagga'\r\nimport './Scanner.css'\r\n\r\nclass Scanner extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state ={\r\n      nocamera: false\r\n    }\r\n    this.onDetect = this.onDetect.bind(this)\r\n  }\r\n\r\n  \r\n  componentDidMount(){\r\n    Quagga.init({\r\n      inputStream: {\r\n        name: \"Live\",\r\n        type: \"LiveStream\",\r\n        constraints: {\r\n          width: '790',\r\n          height: '490'\r\n        },\r\n        numberOfWorkers: navigator.hardwareConcurrency,\r\n        target: document.querySelector('#barcodeScan')\r\n      },\r\n      locate: true,\r\n      decoder: {\r\n        readers: [\"code_128_reader\", \"upc_reader\", \"upc_e_reader\"]\r\n      }\r\n    }, function (err) {\r\n      if (err) {\r\n        return \r\n      }\r\n      Quagga.start()\r\n    })\r\n    Quagga.onDetected(this.onDetect)\r\n    \r\n  }\r\n\r\n  onDetect(res){\r\n    // console.log(res.codeResult.code)\r\n    Quagga.stop()\r\n    Quagga.offProcessed()\r\n    this.props.onBarcodeDetect(res.codeResult.code)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n            <div id=\"barcodeScan\"></div>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Scanner","import React, { Component, Fragment } from 'react'\r\nimport './Product.css'\r\nclass Product extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div>\r\n        <button \r\n          onClick={this.props.click ? this.props.click : this.props.view}\r\n          className=\"btn btn-secondary btn-md btn-block btn-scan-again\">{this.props.click ? 'Scan Again' : 'View History' }</button>\r\n        <table className=\"table table-striped\">\r\n          <tbody>\r\n            <tr>\r\n              <td>Barcode Number</td>\r\n              <td>{this.props.item.barcode_number}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Barcode Type</td>\r\n              <td>{this.props.item.barcode_type}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Product Name</td>\r\n              <td>{this.props.item.product_name}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Product Image</td>\r\n              <td><img src={this.props.item.product_image} /></td>\r\n            </tr>\r\n            <tr>\r\n              <td>Manufacturer</td>\r\n              <td>{this.props.item.manufacturer}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Brand</td>\r\n              <td>{this.props.item.brand}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Category</td>\r\n              <td>{this.props.item.category}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Description</td>\r\n              <td>{this.props.item.description}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table> \r\n        </div>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Product\r\n\r\n","import React, { Component, Fragment } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {processBarcode, startScanning} from '../../store/actions/index'\r\nimport Spinner from '../../components/Spinner/Spinner'\r\nimport Scanner from '../../components/Scanner/Scanner'\r\nimport Product from '../../components/Product/Product'\r\nimport './Scan.css'\r\n\r\n\r\nclass Scan extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this._onBarcodeDetect = this._onBarcodeDetect.bind(this)\r\n  }\r\n\r\n  _onBarcodeDetect(barcode){\r\n    this.props.process(barcode)\r\n  }\r\n \r\n  render() {\r\n    \r\n    let componentRendered = \r\n      <Fragment>\r\n        <div className='divMargin'>\r\n          <button \r\n            type=\"button\" \r\n            onClick={this.props.startScanning}\r\n            className=\"btn btn-primary btn-md btn-block btn-scan\">{'Start Scanning'}</button>\r\n        </div>\r\n      </Fragment>\r\n\r\n    if(this.props.invalid){\r\n      componentRendered =\r\n      <Fragment>\r\n        <div className='divMargin'>\r\n          <div className='invalid'>\r\n            <h1>Invalid Barcode!</h1>\r\n          </div>\r\n          <button \r\n            type=\"button\" \r\n            onClick={this.props.startScanning}\r\n            className=\"btn btn-primary btn-md btn-block btn-scan\">\r\n              {'Try Again'}</button>\r\n        </div>\r\n      </Fragment>\r\n    } else if(this.props.noApi){\r\n      componentRendered =\r\n      <Fragment>\r\n        <div className='divMargin'>\r\n          <div className='invalid'>\r\n            <h1>You need an <a href=\"https://www.barcodelookup.com/api\" target=\"_blank\">API key</a> to run this App.</h1>\r\n          </div>\r\n          <button \r\n            type=\"button\" \r\n            onClick={this.props.startScanning}\r\n            className=\"btn btn-primary btn-md btn-block btn-scan\">\r\n              {'Try Again'}</button>\r\n        </div>\r\n      </Fragment>\r\n    }\r\n\r\n\r\n    if(this.props.scan){\r\n      componentRendered = <div className=\"scannerCam\">\r\n          <Scanner onBarcodeDetect={this._onBarcodeDetect} \r\n          noCamera={()=>console.log('there was no camera')} />\r\n      </div>\r\n    }\r\n    if(this.props.spinner){\r\n      componentRendered = <Spinner />\r\n    }\r\n    if(this.props.productScanned != null){\r\n      if(this.props.scan) {\r\n        componentRendered = <div className=\"scannerCam\">\r\n            <Scanner \r\n              onBarcodeDetect={this._onBarcodeDetect} \r\n              />\r\n          </div>\r\n      } else {\r\n        componentRendered = <Product \r\n                              item={this.props.productScanned}\r\n                              click={this.props.startScanning}/>\r\n      }\r\n    }\r\n\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"scannerContainer\"> \r\n          {componentRendered}\r\n        </div>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    productScanned: state.scanned.productScanned,\r\n    spinner: state.scanned.spinner,\r\n    scan: state.scanned.startScanning,\r\n    invalid: state.scanned.invalidBarcode,\r\n    noApi: state.scanned.noApi\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    process: (barcode) => { dispatch(processBarcode(barcode)) },\r\n    startScanning: () => {dispatch(startScanning())}\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Scan)","\r\nexport const APIKEY = '3i29gk3n5tnobd7t52z1e39ubg66kk'\r\nexport const URL_PATH = 'https://api.barcodelookup.com/v2/products?barcode='\r\nexport const URL_EXTENSION = '&formatted=y&key='","import React, { Component, Fragment } from 'react'\r\nimport Product from '../../components/Product/Product'\r\nimport {clearScanned, setItem, deleteItem} from '../../store/actions/index'\r\n\r\nimport {connect} from 'react-redux'\r\n\r\nimport './History.css'\r\n\r\nclass History extends Component {\r\n\r\n  clickHandler = () => {\r\n    console.log('asdf')\r\n  }\r\n\r\n  componentDidMount(){\r\n    // clear the scannedItems of the state\r\n    this.props.clearScanned()\r\n  }\r\n\r\n  render() {\r\n    let scannedItems = \r\n          <div className=\"emptyHistory\">\r\n            <h1>You don't have scanned items on file.</h1>\r\n          </div>\r\n\r\n// render the table with all the scanned items info IF there is\r\nif (this.props.scannedItems.length >= 1){\r\n  scannedItems = \r\n  <div className='divHistory'>\r\n          <table className=\"table table-striped\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">No.</th>\r\n                <th scope=\"col\">Barcode</th>\r\n                <th scope=\"col\">Product Name</th>\r\n                <th scope=\"col\">Manufacturer</th>\r\n                <th scope=\"col\"></th>\r\n                <th scope=\"col\"></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.props.scannedItems.map((scannedItem, i) => {\r\n                return (\r\n                  <tr key={i}>\r\n                    <th scope=\"row\">{i+1}</th>\r\n                    <td>{scannedItem.barcode_number}</td>\r\n                    <td>{scannedItem.product_name}</td>\r\n                    <td>{scannedItem.manufacturer}</td>\r\n                    <td><button \r\n                          type=\"button\" \r\n                          onClick={()=>this.props.setItem(i)}\r\n                          className=\"btn btn-sm btn-info\">View More</button></td>\r\n                    <td><button \r\n                          onClick={()=>this.props.deleteItem(i)}\r\n                          type=\"button\" \r\n                          className=\"btn btn-sm btn-danger\">Remove</button></td>\r\n                  </tr>\r\n                  )}\r\n                  )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n    }\r\n    \r\n  // render selected item    \r\n  if(this.props.selectedItem){\r\n    scannedItems = \r\n    <div className='scannerContainer'>\r\n      <Product \r\n        item={this.props.selectedItem}\r\n        view={this.props.clearScanned}/>\r\n    </div>\r\n  }\r\n\r\n    return (\r\n      <Fragment>\r\n        {scannedItems}\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    scannedItems: state.scanned.scannedItems,\r\n    selectedItem: state.scanned.productScanned\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    clearScanned: () => { dispatch(clearScanned()) },\r\n    setItem: (i) => { dispatch(setItem(i)) },\r\n    deleteItem: (i) => { dispatch( deleteItem(i)) }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(History)","import React, {Component} from 'react';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\n\n\n\nimport Navigation from './components/Navigation/Navigation'\nimport Scan from './containers/Scan/Scan'\nimport History from './containers/History/History'\nimport './App.css';\n\nclass App extends Component {\n\n\n\n  render(){\n    let routes = (\n      <Switch>\n        <Route exact path='/history' component={History}/>\n        <Route exact path='/' component={Scan}/>\n      </Switch>\n    )\n    return (\n    <BrowserRouter>\n      <div className=\"bkg\">\n        <div className=\"container\">\n\n          <Navigation />\n        \n          {routes}\n\n        </div>\n      </div>\n    </BrowserRouter>\n  )};\n}\n\nexport default App;\n","\r\nconst initialState = {\r\n  spinner: false,\r\n  startScanning: false,\r\n  scannedItems: [],\r\n  productScanned: null,\r\n  invalidBarcode: false,\r\n  noApi: false\r\n}\r\n\r\nconst scannedItems = (state = initialState, action) => {\r\n\r\n  switch(action.type){\r\n    case 'START_SCANNING':\r\n      return{\r\n        ...state,\r\n        startScanning: true,\r\n        productScanned: null\r\n      }\r\n    case 'SPINNER_ON':\r\n      return {\r\n        ...state,\r\n        startScanning: false,\r\n        spinner: true\r\n      }\r\n    case 'PRODUCT_DETECTED':\r\n      return {\r\n        ...state,\r\n        productScanned: action.payload,\r\n        invalidBarcode: false,\r\n        noApi: false,\r\n        spinner: false,\r\n        startScanning: false,\r\n        scannedItems: [...state.scannedItems, action.payload]\r\n      }\r\n    case 'INVALID_BARCODE':\r\n      return {\r\n        ...state,\r\n        productScanned: null,\r\n        spinner: false,\r\n        invalidBarcode: true,\r\n        noApi: false\r\n      }\r\n    case 'NO_API_KEY':\r\n      return {\r\n        ...state,\r\n        productScanned: null,\r\n        spinner: false,\r\n        invalidBarcode: false,\r\n        noApi: true\r\n      }\r\n    case 'CLEAR_SCANNED':\r\n      return {\r\n        ...state,\r\n        productScanned: null\r\n      }\r\n    case 'SET_ITEM': \r\n      let selected = state.scannedItems.filter((item, i)=> {\r\n          return i === action.payload\r\n      })\r\n      return {\r\n        ...state,\r\n        productScanned: {...selected[0]}\r\n      }\r\n      case 'DELETE_ITEM':\r\n        return {\r\n          ...state,\r\n          scannedItems: state.scannedItems.filter((item, i) => {\r\n            return i !== action.payload\r\n          })\r\n        }\r\n    default: return state\r\n  }\r\n}\r\n\r\nexport default scannedItems","\r\nimport {createStore, combineReducers, applyMiddleware, compose} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport scannedItems from './reducers/scannedItems'\r\n\r\nconst rootReducer = combineReducers({\r\n  scanned: scannedItems\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\n\r\nexport default store\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux'\nimport store from './store/configStore'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, \n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}